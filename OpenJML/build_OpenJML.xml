<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="OpenJML">
    <property environment="env"/>
    <property name="JMLAnnotations.location" value="../../JMLAnnotations"/>
    <property name="ECLIPSE_HOME" value="${eclipse.home}"/>
    <property name="OpenJMLTest.location" value="../OpenJMLTest"/>
    <property name="project_loc:OpenJML" value="."/>
    <property name="OpenJDK.location" value="../OpenJDK"/>
    <property name="Specs.location" value="../../Specs"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Plug-in Dependencies.libraryclasspath">
        <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.core.runtime_*.jar"/>
     </path>
    <path id="JMLAnnotations.classpath">
        <pathelement location="${JMLAnnotations.location}/bin"/>
        <path refid="Plug-in Dependencies.libraryclasspath"/>
    </path>
    <path id="OpenJDK.classpath">
        <path refid="JMLAnnotations.classpath"/>
        <pathelement location="${OpenJDK.location}/bin"/>
    </path>
    <path id="JUnit 4.libraryclasspath">
        <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.annotation_1.1*.jar"/>
        <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.osgi_*.jar"/>
    </path>
    <path id="Specs.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
    </path>
    <path id="OpenJML.classpath">
        <path refid="JMLAnnotations.classpath"/>
        <path refid="OpenJDK.classpath"/>
        <pathelement location="bin-runtime"/>
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="Specs.classpath"/>
        <pathelement location="jSMTLIB.jar"/>
        <pathelement location="${JMLAnnotations.location}/bin"/>
    </path>
    <target name="init">
        <mkdir dir="bin-runtime"/>
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin-runtime">
            <fileset dir="runtime">
                <include name="org/jmlspecs/**"/>
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="org/jmlspecs/genericmodels/**"/>
                <exclude name="org/jmlspecs/models/package.html"/>
                <exclude name="org/jmlspecs/models/resolve/package.html"/>
                <exclude name="org/jmlspecs/unfinished/**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="org/jmlspecs/openjml/jmldoc/**"/>
                <exclude name="org/jmlspecs/openjml/old/**"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="demos">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="specs/"/>
                <exclude name="src/"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin-runtime"/>
        <delete dir="bin"/>
    </target>
    <target name="update_repo">
         <exec executable="git">
             <arg value="pull"/>
         </exec>
     </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build_JMLAnnotation.xml" dir="${JMLAnnotations.location}" inheritAll="false" target="clean"/>
        <ant antfile="build_OpenJDK.xml" dir="${OpenJDK.location}" inheritAll="false" target="clean"/>
        <ant antfile="build_Specs.xml" dir="${Specs.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build_JMLAnnotations.xml" dir="${JMLAnnotations.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="build_OpenJDK.xml" dir="${OpenJDK.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="build_Specs.xml" dir="${Specs.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="clean,init,update_repo" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin-runtime" includeantruntime="false" source="${source}" target="${target}">
            <src path="runtime"/>
            <include name="org/jmlspecs/**"/>
            <exclude name="org/jmlspecs/genericmodels/**"/>
            <exclude name="org/jmlspecs/models/package.html"/>
            <exclude name="org/jmlspecs/models/resolve/package.html"/>
            <exclude name="org/jmlspecs/unfinished/**"/>
            <classpath refid="OpenJML.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="demos"/>
            <exclude name="org/jmlspecs/openjml/jmldoc/**"/>
            <exclude name="org/jmlspecs/openjml/old/**"/>
            <exclude name="specs/"/>
            <exclude name="src/"/>
            <classpath refid="OpenJML.classpath"/>
        </javac>
    </target>
    <target name="OpenJML command-line (1)">
        <java classname="org.jmlspecs.openjml.Main" dir="${project_loc:OpenJML}/../../test-openjml" failonerror="true" fork="yes">
            <jvmarg line="-Dopenjml.eclipseSpecsProjectLocation=../eprojects/Specs"/>
            <arg line="&quot;-verboseness= &quot;"/>
            <classpath refid="OpenJML.classpath"/>
        </java>
    </target>
    <target name="OpenJML command-line">
        <java classname="org.jmlspecs.openjml.Main" dir="${project_loc:OpenJML}" failonerror="true" fork="yes">
            <jvmarg line="-Dopenjml.eclipseSpecsProjectLocation=../Specs"/>
            <arg line="-rac -classpath &quot;runtime;../../test-openjml2&quot; ../../test-openjml2/ListSeq.java ../../test-openjml2/Seq.java"/>
            <classpath refid="OpenJML.classpath"/>
        </java>
    </target>
</project>
